name: CI Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    runs-on: ubuntu-latest
    services:
      rabbitmq:
        image: rabbitmq:3-management
        ports:
          - 5672:5672
      redis:
        image: redis:alpine
        ports:
          - 6379:6379
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.8'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pytest pytest-cov pylint structlog bandit
      - name: Run tests
        run: |
          pytest --cov=./ --cov-report=xml
      - name: Upload coverage report
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: coverage.xml
          retention-days: 7
      - name: Run Code Analysis Tests
        run: pytest tests/integration/test_code_analysis.py -v
      - name: Store Test Artifacts
        uses: actions/upload-artifact@v4
        if: ${{ always() }}
        with:
          name: test-reports
          path: test-reports/
          retention-days: 7
      - name: Run Security Scan
        run: bandit -r src/ -f json -o bandit.json
      - name: Upload Security Report
        uses: actions/upload-artifact@v4
        with:
          name: bandit-report
          path: bandit.json
          retention-days: 7

  stress_tests:
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.8'
      - name: Install Dependencies
        run: |
          pip install -r requirements.txt
          pip install pytest pylint structlog
      - name: Stress Tests
        run: pytest tests/integration/test_code_analysis.py -m stress

  log_analysis:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Check Structured Logs
        run: cat src/logs/app.log | jq empty
        env:
          LOG_LEVEL: DEBUG

  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.8'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flake8 black
      - name: Run black
        run: black . --check --diff
      - name: Run flake8
        run: |
          # Ignorar erros de formatação que o black já cuida
          flake8 . --count --max-line-length=88 --extend-ignore=E203,W503 --statistics 